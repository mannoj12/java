/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package javaapplication4;

import IO.Write;
import static com.oracle.jrockit.jfr.DataType.UTF8;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import static java.nio.channels.DatagramChannel.open;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import static javax.imageio.ImageIO.write;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.crypto.*;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import sun.misc.BASE64Decoder;
/**
 *
 * @author manoj
 */
public class jframe1 extends javax.swing.JFrame {
    JTextField pathtext;
    String dat,reportS,prespath,p,p3MouseClicked;
    String pNo, pName, pAge, pDob, pHeight, pWeight, pAddress, pFamilyMember, pMob;
    String pReportType = ""; 
    File f;
    String listDetail[];
    /**
     * Creates new form jframe1
     */
    public jframe1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        nPatient = new javax.swing.JLabel();
        sheet = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        pid = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        age = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        phoneNo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        dob = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        weight = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        height = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        familyMemberName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        pidPresc = new javax.swing.JTextField();
        savePresc = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        prscriptionText = new javax.swing.JTextArea();
        jLabel29 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        prescriptionTable = new javax.swing.JTable();
        patientId = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        searchPrec = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        reportType = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        patientID = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        reportPath = new javax.swing.JTextField();
        saveReport = new javax.swing.JButton();
        searchReport = new javax.swing.JButton();
        browse = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        p3 = new javax.swing.JTable();
        jLabel32 = new javax.swing.JLabel();
        panel1 = new java.awt.Panel();
        jPanel9 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        pidf = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        namf = new javax.swing.JTextField();
        search1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        pidNumber = new javax.swing.JLabel();
        pNam = new javax.swing.JLabel();
        pAg = new javax.swing.JLabel();
        pBirth = new javax.swing.JLabel();
        pHigh = new javax.swing.JLabel();
        pWght = new javax.swing.JLabel();
        pAd = new javax.swing.JLabel();
        pMember = new javax.swing.JLabel();
        pPhNo = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();

        jLabel10.setText("jLabel10");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel11.setLayout(null);

        nPatient.setBackground(new java.awt.Color(255, 0, 0));
        nPatient.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nPatient.setForeground(new java.awt.Color(255, 255, 255));
        nPatient.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nPatient.setText("Next Patient");
        nPatient.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 204, 204)));
        nPatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nPatientMouseClicked(evt);
            }
        });
        jPanel11.add(nPatient);
        nPatient.setBounds(840, 20, 180, 19);

        sheet.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        sheet.setMaximumSize(new java.awt.Dimension(3276, 3276));
        sheet.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sheetStateChanged(evt);
            }
        });

        jPanel6.setLayout(null);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("PID :");
        jPanel6.add(jLabel9);
        jLabel9.setBounds(40, 20, 230, 26);
        jPanel6.add(pid);
        pid.setBounds(210, 20, 160, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("NAME :");
        jPanel6.add(jLabel1);
        jLabel1.setBounds(40, 70, 230, 24);

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });
        jPanel6.add(name);
        name.setBounds(210, 70, 160, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("AGE :");
        jLabel2.setToolTipText("");
        jPanel6.add(jLabel2);
        jLabel2.setBounds(40, 110, 230, 25);
        jPanel6.add(age);
        age.setBounds(210, 110, 160, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Phone No. :");
        jPanel6.add(jLabel5);
        jLabel5.setBounds(40, 150, 230, 26);
        jPanel6.add(phoneNo);
        phoneNo.setBounds(210, 150, 160, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("DOB :");
        jPanel6.add(jLabel3);
        jLabel3.setBounds(40, 190, 230, 31);

        dob.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        dob.setToolTipText("dd/MM/yyyy");
        dob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dobActionPerformed(evt);
            }
        });
        jPanel6.add(dob);
        dob.setBounds(210, 200, 160, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Weight :");
        jPanel6.add(jLabel4);
        jLabel4.setBounds(40, 230, 230, 30);
        jPanel6.add(weight);
        weight.setBounds(210, 240, 160, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Height :");
        jPanel6.add(jLabel6);
        jLabel6.setBounds(40, 280, 230, 20);

        height.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heightActionPerformed(evt);
            }
        });
        jPanel6.add(height);
        height.setBounds(210, 280, 160, 30);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("FamilyMember :");
        jPanel6.add(jLabel13);
        jLabel13.setBounds(40, 320, 230, 25);

        familyMemberName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                familyMemberNameActionPerformed(evt);
            }
        });
        jPanel6.add(familyMemberName);
        familyMemberName.setBounds(210, 320, 160, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Address :");
        jPanel6.add(jLabel7);
        jLabel7.setBounds(40, 350, 230, 38);

        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });
        jPanel6.add(address);
        address.setBounds(210, 360, 160, 30);

        submit.setBackground(new java.awt.Color(153, 153, 153));
        submit.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        submit.setText("submit");
        submit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        jPanel6.add(submit);
        submit.setBounds(40, 430, 230, 29);

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javax/swing/fwb/work/background.jpg"))); // NOI18N
        jPanel6.add(jLabel28);
        jLabel28.setBounds(0, 0, 1100, 800);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 1297, Short.MAX_VALUE)
                .addGap(499, 499, 499)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(415, 415, 415)
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addGap(274, 274, 274))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 975, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        sheet.addTab("Patient Details", jPanel1);

        jPanel7.setLayout(null);
        jPanel7.add(pidPresc);
        pidPresc.setBounds(60, 30, 120, 30);

        savePresc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        savePresc.setText("Save");
        savePresc.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        savePresc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePrescActionPerformed(evt);
            }
        });
        jPanel7.add(savePresc);
        savePresc.setBounds(60, 70, 78, 21);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("PID :");
        jPanel7.add(jLabel18);
        jLabel18.setBounds(20, 30, 30, 15);

        prscriptionText.setBackground(null);
        prscriptionText.setColumns(20);
        prscriptionText.setRows(5);
        prscriptionText.setToolTipText("Add Prescription");
        prscriptionText.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(153, 255, 255), null, null));
        jScrollPane1.setViewportView(prscriptionText);

        jPanel7.add(jScrollPane1);
        jScrollPane1.setBounds(200, 20, 530, 450);

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javax/swing/fwb/work/background.jpg"))); // NOI18N
        jPanel7.add(jLabel29);
        jLabel29.setBounds(0, 0, 1430, 780);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 1196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 633, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 766, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 252, Short.MAX_VALUE))
        );

        sheet.addTab("New Prescription Sheet", jPanel3);

        jButton4.setText("submit");

        jPanel8.setLayout(null);

        prescriptionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "Patient Name", "date", "Prescription"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        prescriptionTable.setToolTipText("null");
        prescriptionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prescriptionTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(prescriptionTable);

        jPanel8.add(jScrollPane2);
        jScrollPane2.setBounds(200, 20, 452, 402);
        jPanel8.add(patientId);
        patientId.setBounds(70, 20, 110, 30);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("PID :");
        jPanel8.add(jLabel15);
        jLabel15.setBounds(20, 20, 30, 15);

        searchPrec.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchPrec.setText("Search");
        searchPrec.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchPrec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPrecActionPerformed(evt);
            }
        });
        jPanel8.add(searchPrec);
        searchPrec.setBounds(70, 60, 65, 21);

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javax/swing/fwb/work/background.jpg"))); // NOI18N
        jPanel8.add(jLabel30);
        jLabel30.setBounds(-40, -20, 1500, 790);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 1649, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 180, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 794, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(82, 82, 82))
        );

        sheet.addTab("Old P sheet", jPanel4);

        jPanel2.setLayout(null);

        jPanel10.setLayout(null);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Report Type");
        jPanel10.add(jLabel14);
        jLabel14.setBounds(30, 40, 80, 15);

        reportType.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        reportType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Blood Report", "X-Ray Report", "Ultrasound Report" }));
        reportType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportTypeActionPerformed(evt);
            }
        });
        jPanel10.add(reportType);
        reportType.setBounds(120, 40, 150, 20);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("PID :");
        jPanel10.add(jLabel11);
        jLabel11.setBounds(30, 100, 40, 15);

        patientID.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        patientID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientIDActionPerformed(evt);
            }
        });
        patientID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                patientIDKeyTyped(evt);
            }
        });
        jPanel10.add(patientID);
        patientID.setBounds(120, 100, 120, 30);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Report :");
        jPanel10.add(jLabel12);
        jLabel12.setBounds(30, 140, 51, 15);

        reportPath.setEditable(false);
        reportPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportPathActionPerformed(evt);
            }
        });
        jPanel10.add(reportPath);
        reportPath.setBounds(120, 140, 170, 30);

        saveReport.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        saveReport.setText("SAVE");
        saveReport.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        saveReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveReportMouseClicked(evt);
            }
        });
        saveReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveReportActionPerformed(evt);
            }
        });
        jPanel10.add(saveReport);
        saveReport.setBounds(30, 200, 90, 21);

        searchReport.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchReport.setText("SEARCH");
        searchReport.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchReportMouseClicked(evt);
            }
        });
        searchReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchReportActionPerformed(evt);
            }
        });
        jPanel10.add(searchReport);
        searchReport.setBounds(270, 200, 90, 21);

        browse.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        browse.setText("Browse");
        browse.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseActionPerformed(evt);
            }
        });
        jPanel10.add(browse);
        browse.setBounds(300, 140, 90, 21);

        p3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "Report", "Date", "Show", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        p3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p3MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(p3);

        jPanel10.add(jScrollPane5);
        jScrollPane5.setBounds(410, 40, 460, 430);

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javax/swing/fwb/work/background.jpg"))); // NOI18N
        jPanel10.add(jLabel32);
        jLabel32.setBounds(0, 0, 1170, 770);

        jPanel2.add(jPanel10);
        jPanel10.setBounds(0, 0, 1710, 830);

        sheet.addTab("Reports", jPanel2);

        panel1.setBackground(new java.awt.Color(224, 223, 227));

        jPanel9.setLayout(null);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("PID :");
        jPanel9.add(jLabel16);
        jLabel16.setBounds(20, 30, 30, 15);
        jPanel9.add(pidf);
        pidf.setBounds(70, 20, 100, 30);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Name :");
        jPanel9.add(jLabel17);
        jLabel17.setBounds(20, 80, 41, 15);

        namf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namfActionPerformed(evt);
            }
        });
        jPanel9.add(namf);
        namf.setBounds(70, 70, 100, 30);

        search1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        search1.setText("Search");
        search1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search1ActionPerformed(evt);
            }
        });
        jPanel9.add(search1);
        search1.setBounds(70, 120, 90, 20);

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setVisible(false);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("PID :");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("Name :");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("Age :");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setText("Birth Date :");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setText("Height :");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setText("Weight :");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setText("Address :");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel26.setText("Family Member :");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel27.setText("Phone :");

        pidNumber.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        pNam.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        pAg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        pBirth.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        pHigh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        pWght.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        pAd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        pMember.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        pPhNo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25)
                    .addComponent(jLabel27)
                    .addComponent(jLabel26))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pidNumber)
                    .addComponent(pNam)
                    .addComponent(pAg)
                    .addComponent(pBirth)
                    .addComponent(pHigh)
                    .addComponent(pWght)
                    .addComponent(pAd)
                    .addComponent(pPhNo)
                    .addComponent(pMember))
                .addGap(232, 232, 232))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pidNumber))
                .addGap(34, 34, 34)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pNam))
                .addGap(40, 40, 40)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pAg))
                .addGap(44, 44, 44)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pBirth))
                .addGap(42, 42, 42)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pHigh))
                .addGap(39, 39, 39)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pWght))
                .addGap(43, 43, 43)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(41, 41, 41))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(pAd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pMember))
                .addGap(36, 36, 36)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pPhNo))
                .addContainerGap())
        );

        jPanel9.add(jPanel5);
        jPanel5.setBounds(190, 20, 360, 478);

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javax/swing/fwb/work/background.jpg"))); // NOI18N
        jPanel9.add(jLabel31);
        jLabel31.setBounds(0, -90, 1290, 990);

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 1126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 703, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 238, Short.MAX_VALUE))
        );

        sheet.addTab("Search", panel1);

        jPanel11.add(sheet);
        sheet.setBounds(0, 30, 1834, 1047);

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javax/swing/fwb/work/background.jpg"))); // NOI18N
        jPanel11.add(jLabel33);
        jLabel33.setBounds(0, -50, 1350, 910);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 1101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2133, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 756, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reportTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportTypeActionPerformed

        comboSelector();
    }//GEN-LAST:event_reportTypeActionPerformed

    private void searchReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchReportActionPerformed
        
        Security sc = new Security();
        Connection conn = null;
        Statement stmt = null;
        ResultSet rs = null;
        DefaultTableModel model=(DefaultTableModel)p3.getModel();
        model.setRowCount(0);
        if(patientID.getText().length()!=0&&patientID.getText().length()==4){
            try {
                conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbname","root","");
                stmt = conn.createStatement();
                rs = stmt.executeQuery("select count(*) from avi3_report where PID = '"+patientID.getText()+"'");

                rs.next();
                int count = rs.getInt(1);
                if(count==0){
                    JOptionPane.showMessageDialog(null, "There is no record");
                }else{
                    try {
                        rs = stmt.executeQuery("select * from avi3_report where PID = '"+patientID.getText()+"'");
                        //  rs.next();
                        rs.first();

                        do{
                            String d1=rs.getString("PID");
                            String d2=rs.getString("REPORT");
                            String d3=rs.getString("DATE");
                            String d4=new String( sc.decrypt( rs.getString("SHOW")));
                            System.out.println("reportPath "+d4 );
                            String d5=rs.getString("NAME");

                            model.addRow(new Object[]{d1,d2,d3,d4,d5});
                        }while(rs.next());
                    } catch (Exception e) {
                    }
                }

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "error");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Enter the PID");
        }

        ////
        //         Connection conn = null;
        //        Statement stmt = null;
        //        ResultSet rs = null;
        //        String pNm = "" ;
        //        try {
            //             conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbname","root","");
            //             stmt = conn.createStatement();
            //             rs = stmt.executeQuery("select NAME from avi3_profile where PID = '"+patientNo+"'");
            //             rs.next();
            //             pNm = rs.getString(1);
            //             System.out.println("Patient Name = "+pNm);
            //        } catch (Exception e) {
            //        }
        //       return  pNm;
    }//GEN-LAST:event_searchReportActionPerformed

    private void searchReportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchReportMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_searchReportMouseClicked

    private void patientIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patientIDKeyTyped

    }//GEN-LAST:event_patientIDKeyTyped

    private void patientIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientIDActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_patientIDActionPerformed

    private void p3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p3MouseClicked

        int selectedRow = p3.getSelectedRow();
        if (evt.getClickCount() == 2 ){

            try {

                System.out.println("report"+p3.getValueAt(selectedRow, 3).toString());
                Desktop.getDesktop().open(new File((String) p3.getValueAt(selectedRow, 3)));
                //Desktop.getDesktop().open(new File("C:\\xampp\\htdocs\\resumes\\ssssss.txt"));

            }
            catch (IOException e1) {
                e1.printStackTrace();
            }
            /*   int Row =p3.getSelectedRow();
            //Runtime rt=Runtime.getRuntime();
            String value= (p3.getModel().getValueAt(Row,2).toString());
            try {
                //  Runtime.getRuntime().exec("rundll32.exe url.dll,FileProtocolHandler" +value);
                Runtime.getRuntime().exec(new String[]{"/usr/bin/evince", .getAbsolutePath() });
                // Process p = rt.exec("notepad " +value);

            }
            catch (IOException ex) {
                Logger.getLogger(jframe1.class.getName()).log(Level.SEVERE, null, ex);
            }*/
        }
    }//GEN-LAST:event_p3MouseClicked

    private void saveReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveReportActionPerformed

        DefaultTableModel model=(DefaultTableModel)p3.getModel();
        pNo = patientID.getText();
        //int patientNo = Integer.parseInt(pNo);
        //reportS
        int i = pReportType.length();
        Security security = new Security();
        if(pReportType.length()==0){
            JOptionPane.showMessageDialog(null, "Pls select a Report Type");
        }else{
            if(pNo.length()!=0&&pNo.length()==4){
                if(reportPath.getText().length()!=0){
                    pName = fetchPatientDetail(pNo);
                    if(pName.length()!=0){

                        String cDate = getDate();

                        Connection conn = null;
                        try {
                            System.out.println("Rport path....."+reportS);
                            if(f.renameTo(new File("C:/xampp/htdocs/resumes/" + f.getName())));
                            reportS = "C:/xampp/htdocs/resumes/" + f.getName();
                            conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbname","root","");
                            Statement stmt = (com.mysql.jdbc.Statement) conn.createStatement();
                            String insert = "INSERT INTO avi3_report VALUES ("
                            +quotate(pNo)+","
                            +quotate(pReportType)+","
                            +quotate(cDate)+","
                            +quotate(security.encrypt(reportS))+","
                            +quotate(pName)+")";
                            long success = stmt.executeUpdate(insert);
                            System.out.println("Encrypted reportPath  "+security.encrypt(reportS));
                            if (success==0) {
                                JOptionPane.showMessageDialog(null, "Not Submitted,Try again");
                            }else{
                                model.addRow(new Object[]{pNo,pReportType,cDate,reportS,pName});

                                JOptionPane.showMessageDialog(null, "saved");
                                reportPath.setText("");
                                pReportType = "";
                            }

                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, " No Record Found ");
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Pls add Report");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Enter PID");
            }
        }

    }//GEN-LAST:event_saveReportActionPerformed

    private void saveReportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveReportMouseClicked

        /*int Row = p3.getSelectedRow();
        String value= (p3.getModel().getValueAt(Row,2).toString());
        Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler"+"C:\\Users\\manoj\\Documents\\1.txt");
        } catch (IOException ex) {
            Logger.getLogger(jframe1.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_saveReportMouseClicked

    private void reportPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportPathActionPerformed

    }//GEN-LAST:event_reportPathActionPerformed

    private void browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseActionPerformed
        if(patientID.getText().length()!=0&&patientID.getText().length()==4){
            JFileChooser chooser=new JFileChooser();
            chooser.showOpenDialog(null);
            f=chooser.getSelectedFile();
            String filename=f.getAbsolutePath();
            reportPath.setText(filename);
            reportS = filename;
        }else{
            JOptionPane.showMessageDialog(null, "Pls Enter Patient Id");
        }

    }//GEN-LAST:event_browseActionPerformed

    private void prescriptionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prescriptionTableMouseClicked

        int selectedRow = prescriptionTable.getSelectedRow();
        BufferedWriter bw = null;
        try {
            Runtime rt=Runtime.getRuntime();
            String file="C:\\aa.txt";
            delFile(file);
            if(evt.getClickCount()==2){
                StringBuffer fileContent = new StringBuffer();
                Object rawVal = prescriptionTable.getModel().getValueAt(selectedRow, 3);
                fileContent.append(rawVal);
                bw = new BufferedWriter(new FileWriter(file, true));

                Scanner scd = new Scanner(rawVal.toString());
                String line = null;
                while (scd.hasNextLine()) {
                    line = scd.nextLine();
                    bw.write(line);
                    bw.newLine();
                }

                scd.close();
                bw.close();
                Process p = rt.exec("notepad\n "+file );
                System.out.println("The value in raw = "+rawVal);

            }else{
                System.out.println("2 time click........");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        //        int selectedRow = prescriptionTable.getSelectedRow();
        //        if (evt.getClickCount() == 2 ){
            ////            Runtime rt=Runtime.getRuntime();
            ////            String file="C:\\aa.txt";
            ////            try {
                ////           // Process p = rt.exec("notepad\n "+ file);
                ////            //Desktop.getDesktop().open(new File((String) prescriptionTable.getValueAt(selectedRow,3).toString()));
                ////            Process p = rt.exec("notepad\n "+file );
                //
                //
                //         } catch (IOException ex) {
                //            Logger.getLogger(jframe1.class.getName()).log(Level.SEVERE, null, ex);
                //         }
            //        }

    }//GEN-LAST:event_prescriptionTableMouseClicked

    private void searchPrecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPrecActionPerformed

        Connection conn = null;
        Statement stmt = null;
        ResultSet rs = null;
        DefaultTableModel model=(DefaultTableModel)prescriptionTable.getModel();
        model.setRowCount(0);

        if(patientId.getText().length()==4)
        {
            try {
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/dbname","root","");
                stmt = conn.createStatement();
                rs = stmt.executeQuery("select * from avi3_prec where PID ='"+patientId.getText()+"'");
                rs.first();
                do{
                    String d1=rs.getString("PID");
                    String d2=rs.getString("NAME");
                    String d3=rs.getString("DATE");
                    String d4=rs.getString("SHOWPREC");

                    model.addRow(new Object[]{d1,d2,d3,d4});

                }while(rs.next());
            }
            catch (SQLException e)
            {
                JOptionPane.showMessageDialog(null, "No Record found");
            }
        }else{
            JOptionPane.showMessageDialog(null, "PLease Enter PID or Name");
        }
        //        Runtime rt=Runtime.getRuntime();
        //        String file="C:\\Users\\manoj\\.netbeans-derby\\patient profile\\aa.txt";
        //        try {
            //            Process p = rt.exec("notepad\n "+ file);
            //        } catch (IOException ex) {
            //            Logger.getLogger(jframe1.class.getName()).log(Level.SEVERE, null, ex);
            //        }
    }//GEN-LAST:event_searchPrecActionPerformed

    private void savePrescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePrescActionPerformed

        String ptId = pidPresc.getText();
        DefaultTableModel model=(DefaultTableModel)prescriptionTable.getModel();
        model.setRowCount(0);
        if(ptId.length()!=0&&ptId.length()==4){
            if(prscriptionText.getText().length()!=0){
                pName = fetchPatientDetail(ptId);
                String cDate = getDateff();

                Connection conn = null;
                if(pName.length()!=0){
                    try {

                        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/dbname","root","");
                        Statement stmt = conn.createStatement();
                        String insert = "INSERT INTO avi3_prec VALUES ("
                        +quotate(ptId)+","
                        +quotate(pName)+","
                        +quotate(cDate)+","
                        +quotate(prscriptionText.getText())+")";
                        long success = stmt.executeUpdate(insert);
                        if (success==0) {
                            JOptionPane.showMessageDialog(null, "Not Submitted,Try again");
                        }else{

                            JOptionPane.showMessageDialog(null, "saved");
                            model.addRow(new Object[]{ptId,pName,cDate,prscriptionText.getText()});
                            pidPresc.setText("");
                            prscriptionText.setText("");
                        }

                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "There is no Record for this PID..");
                }
            }else{
                JOptionPane.showMessageDialog(null, "You didn't add Prescription.");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Pls Enter correct PID");
        }

        //      try {
            //            long tim= new Date().getTime();
            //       Date dat1= new Date();
            //            DateFormat dateFormat= new SimpleDateFormat("yyyy/MM/dd");
            //            dat=dateFormat.format(dat1);
            //        Connection conn=null;
            //            conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/patient profile","root","");
            //          String sql="Insert into prescription(pid,prespath,date,time) values(?,?,?,?)";
            //       PreparedStatement pst=conn.prepareStatement(sql);
            //
            //       pst.setString(1, pidPresc.getText());
            //       pst.setString(2, pd1.getText());
            //       pst.setString(3, dat);
            //       pst.setLong(4, tim);
            //
            //            pst.execute();
            //
            //            JOptionPane.showMessageDialog(null, "saved");
            //        } catch (Exception e1) {
            //            JOptionPane.showMessageDialog(null, e1);
            //        }
        //       String s=prscriptionText.getText();
        //        try{
            //            Write.writeInA(s);
            //            JOptionPane.showMessageDialog(this, "saved successfully");
            //        }
        //        catch(Exception e){}
    }//GEN-LAST:event_savePrescActionPerformed

    private void dobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dobActionPerformed

    private void familyMemberNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_familyMemberNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_familyMemberNameActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed

        int access = 0;
        //submit.setEnabled(false);
        //        try{
            //            int number1;
            //            number1 = Integer.parseInt(
                //                this.height.getText());
            //        }
        //        catch (Exception e) {
            //            JOptionPane.showMessageDialog(this,"invalid height","error",JOptionPane.ERROR_MESSAGE);
            //        }
        //        try{
            //            int number2;
            //            number2 = Integer.parseInt(
                //                this.weight.getText());
            //        }
        //        catch (Exception e) {
            //            JOptionPane.showMessageDialog(this,"invalid weight","error",JOptionPane.ERROR_MESSAGE);}
        //        try{
            //            int number3;
            //            number3 = Integer.parseInt(
                //                this.age.getText());
            //        }
        //        catch (Exception e) {
            //            JOptionPane.showMessageDialog(this,"invalid age","error",JOptionPane.ERROR_MESSAGE);}
        //        try{
            //            int number4;
            //            number4 = Integer.parseInt(
                //                this.phoneNo.getText());
            //        }
        //        catch (Exception e) {
            //            JOptionPane.showMessageDialog(this,"invalid Phone number","error",JOptionPane.ERROR_MESSAGE);}
        //

        try {
            //Class.forName("com.mysql.jdbc.Driver");
            Connection conn=null;

            //conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/patient profile","root","");
            conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbname","root","");
            //pid, pNmae, pAge, pDob, pHeight, pWeight, pAddress, pFamilyMember, pMob
            pNo = pid.getText();
            pName = name.getText();
            pAge = age.getText();
            pDob = dob.getText();
            pHeight = height.getText();
            pWeight = weight.getText();
            pAddress = address.getText();
            pFamilyMember = familyMemberName.getText();
            pMob = phoneNo.getText();

            if(pNo.length()>=0||pName.length()==0||pAge.length()>=0||pDob.length()>=0||pMob.length()<10||pMob.length()>10){
                if(pNo.length()==0){
                    JOptionPane.showMessageDialog(null,"Patient ID cann't be empty");
                }else{
                    if(pNo.length()>4||pNo.length()<4){
                        access = 1;
                        JOptionPane.showMessageDialog(null,"Patient ID cann't be more or less than 4 Digit");
                    }else{
                        if(pName.length()==0){
                            access = 1;
                            JOptionPane.showMessageDialog(null,"Patient Name cann't be empty");
                        }else{
                            if(pAge.length()==0){
                                access = 1;
                                JOptionPane.showMessageDialog(null,"Patient Age cann't be empty");
                            }else{
                                int age = Integer.parseInt(this.age.getText());
                                if(pAge.length()>2||age<1){
                                    access = 1;
                                    JOptionPane.showMessageDialog(null,"Patient Age not Valid");
                                }else{
                                    if(pDob.length()==0){
                                        JOptionPane.showMessageDialog(null,"Patient Birth cann't be empty");
                                    }else{
                                        if(pMob.length()<10||pMob.length()>10){
                                            access = 1;
                                           JOptionPane.showMessageDialog(null,"Phone No. should be 10 digits.");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if(access==0){
                if(pNo.length()>0 && pName.length()>0 && pAge.length()>0 && pDob.length()>0){
                    //submit.setEnabled(true);
                    Statement stmt = (com.mysql.jdbc.Statement) conn.createStatement();
                    String insert = "INSERT INTO avi3_profile VALUES ("
                    +quotate(pNo)+","
                    +quotate(pName)+","
                    +quotate(pAge)+","
                    +quotate(pDob)+","
                    +quotate(pHeight)+","
                    +quotate(pWeight)+","
                    +quotate(pAddress)+","
                    +quotate(pFamilyMember)+","
                    +quotate(pMob)
                    +")";
                    long success = stmt.executeUpdate(insert);
                    if (success==0) {
                        JOptionPane.showMessageDialog(null, "Not Submitted,Try again");
                    }else{
                        insertUser(pNo, pName);
                        JOptionPane.showMessageDialog(null, "saved");
                        pid.setText("");
                        name.setText("");
                        age.setText("");
                        dob.setText("");
                        height.setText("");
                        weight.setText("");
                        address.setText("");
                        familyMemberName.setText("");
                        phoneNo.setText("");
                    }
                }
            }

            // String sql="Insert into details(PID, NAME, AGE, DOB, HEIGHT, WEIGHT, ADD, FMNAME, PHONE) values(?,?,?,?,?,?,?,?,?)";
            // String insert = "INSERT INTO avi3_profile VALUES ('"+pNo+"', "+pName+"', "+pAge+"', "+pDob+"', "+pHeight+"', "+pWeight+"', "+pAddress+"', "+pFamilyMember+"' "+pMob+ ")";
            //            String sql="Insert into profile(PID,NAME,AGE,DOB,HEIGHT,WEIGHT,ADD,FMNAME,PHONE) values(?,?,?,?,?,?,?,?,?)";
            //            //PreparedStatement pst=conn.prepareStatement(sql);
            //            pst.setString(1,pid.getText());
            //            pst.setString(2,name.getText());
            //            pst.setString(3,age.getText());
            //            pst.setString(4,dob.getText());
            //            //pst.setString(5,gender.getText());
            //            pst.setString(5,height.getText());
            //            pst.setString(6,weight.getText());
            //            pst.setString(7,address.getText());
            //            pst.setString(8,familyMemberName.getText());
            //            pst.setString(9,height.getText());
            //            pst.execute();
        } catch (Exception e1) {
            JOptionPane.showMessageDialog(null, e1);
        }

        //        String str = new String();
        //        str = name.getText();
        //        if(str.length()>2){
            //            JOptionPane.showMessageDialog(null,"success'  hello & welcome");
            //        }
        //        String str2 = new String();
        //        str2 = address.getText();
        //        if(str2.length()== 0){
            //            JOptionPane.showMessageDialog(null,"not valid address");
            //        }
        //        String str3 = new String();
        //        str3 = familyMemberName.getText();
        //        if(str3.length()>4){
            //            JOptionPane.showMessageDialog(null,"valid");}
        //        else if(str3.length()<1){
            //            JOptionPane.showMessageDialog(null,"not valid address");
            //        }
        //        try{
            //            int number5;
            //            number5 = Integer.parseInt(
                //                this.pid.getText());
            //        }
        //        catch (Exception e) {
            //            JOptionPane.showMessageDialog(this,"invalid pid","error",JOptionPane.ERROR_MESSAGE);}
    }//GEN-LAST:event_submitActionPerformed

    public void insertUser(String pid, String name) throws SQLException, Exception{
        Connection conn=null;
        //Security sec = new Security();
        Encrypt_Decrypt md = new Encrypt_Decrypt();
        radio rd = new radio();
        try {
            String pass = md.EncryptText(name+"123");
            System.out.println("jjjjjjjjjjjjj     "+pass);
            conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbname","root","");
             Statement stmt = (com.mysql.jdbc.Statement) conn.createStatement();
             String insert = "INSERT INTO avi3_users VALUES ("
                    +quotate(pid)+","
                    +quotate(name)+","
                    +quotate(name)+","
                    +quotate(name+"@gmail.com")+","
                    +quotate(pass)+","
                    +quotate("")+","
                    +quotate("0")+","
                    +quotate("0")+","
                    +quotate(getDateff())+","
//                    +quotate(rd.cDate)+","
                     +quotate(getDateff())+","
                    +quotate("")+","
                    +quotate("")+","
                    +quotate("0000-00-00 00:00:00")+","
                    +quotate(""+0)
                    +")";
                    long success = stmt.executeUpdate(insert);
        } catch (NoSuchPaddingException ex) {
            Logger.getLogger(jframe1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidKeyException ex) {
            Logger.getLogger(jframe1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalBlockSizeException ex) {
            Logger.getLogger(jframe1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidAlgorithmParameterException ex) {
            Logger.getLogger(jframe1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BadPaddingException ex) {
            Logger.getLogger(jframe1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(jframe1.class.getName()).log(Level.SEVERE, null, ex);
        }
//        try {
//            //conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/patient profile","root","");
//            conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbname","root","");
//             Statement stmt = (com.mysql.jdbc.Statement) conn.createStatement();
//             String insert = "INSERT INTO avi3_users VALUES ("
//                    +quotate(pid)+","
//                    +quotate(name)+","
//                    +quotate(name)+","
//                    +quotate(name+"@gmail.com")+","
//                    +quotate(pName)+","
//                    +quotate(pWeight)+","
//                    +quotate(pAddress)+","
//                    +quotate(pFamilyMember)+","
//                    +quotate(pMob)
//                    +")";
//                    long success = stmt.executeUpdate(insert);
//        } catch (SQLException ex) {
//            Logger.getLogger(jframe1.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }
    
    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void heightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heightActionPerformed

    }//GEN-LAST:event_heightActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void namfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namfActionPerformed

    private void search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search1ActionPerformed
        //        Connection conn=null;
        //        DefaultTableModel model=(DefaultTableModel)p1.getModel();
        //        try {
            //
            //            conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/patient profile","root","");
            //            String sql1;
            //
            //           // System.out.println(nam.getText());
            //            System.out.println(namf.getText());
            //            sql1 = "select * from details where Name='"+pidf.getText()+"' OR FamilyMember='"+namf.getText()+"' ";
            //            PreparedStatement pst=conn.prepareStatement(sql1);
            //            ResultSet rs = pst.executeQuery(sql1);
            //            while(rs.next())
            //            {
                //                String d1=rs.getString("pid");
                //                String d2=rs.getString("name");
                //                String d3=rs.getString("age");
                //                String d4=rs.getString("gender");
                //                String d5=rs.getString("dob");
                //                String d6=rs.getString("weight");
                //                String d7=rs.getString("height");
                //                String d8=rs.getString("familymember");
                //                String d9=rs.getString("address");
                //                model.addRow(new Object[]{d1,d2,d3,d4,d5,d6,d7,d8,d9});
                //            }
            //
            //        } catch (SQLException ex) {
            //            JOptionPane.showMessageDialog(null, "error");
            //        }

        Connection conn = null;
        Statement stmt = null;
        ResultSet rs = null;
       // DefaultTableModel model=(DefaultTableModel)p1.getModel();
       // model.setRowCount(0);
        if(pidf.getText().length()==4||namf.getText().length()!=0)
        {
            try {
                conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/dbname","root","");
                stmt = conn.createStatement();
                rs = stmt.executeQuery("select * from avi3_profile where PID ='"+pidf.getText()+"' or NAME='"+namf.getText()+"'");
                System.out.print("hi;vk;dof");
                rs.first();
                do{
                    String d1=rs.getString("PID");
                    String d2=rs.getString("NAME");
                    String d3=rs.getString("AGE");
                    String d4=rs.getString("DOB");
                    String d5=rs.getString("HEIGHT");
                    String d6=rs.getString("WEIGHT");
                    String d7=rs.getString("ADD");
                    String d8=rs.getString("FMNAME");
                    String d9=rs.getString("PHONE");
              //      model.addRow(new Object[]{d1,d2,d3,d4,d5,d6,d7,d8,d9});
                    pidNumber.setText(d1);
                    pNam.setText(d2);
                    pAg.setText(d3);
                    pBirth.setText(d4);
                    pHigh.setText(d5);
                    pWght.setText(d6);
                    pAd.setText(d7);
                    pMember.setText(d8);
                    pPhNo.setText(d9);

                    jPanel5.setVisible(true);
                }while(rs.next());
            }
            catch (SQLException e)
            {
                jPanel5.setVisible(false);
                JOptionPane.showMessageDialog(null, "No Record found");
            }
        }else{
             jPanel5.setVisible(false);
            JOptionPane.showMessageDialog(null, "PLease Enter PID or Name");
        }
    }//GEN-LAST:event_search1ActionPerformed

    private void nPatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nPatientMouseClicked
        
        NewDailog nx = new NewDailog();
        nx.setResizable(false);
        nx.setVisible(true);
    }//GEN-LAST:event_nPatientMouseClicked

    private void sheetStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sheetStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_sheetStateChanged

    public String getDate(){
        Date now = new Date();
            SimpleDateFormat formatter = new SimpleDateFormat( "dd/MM/yyyy" );
            String date = formatter.format( now );
            System.out.println ( "The current date is: " + date); 
            return date;
    }
    
    public void inNextPatient(){
        sheet.setSelectedIndex(0);
        this.remove(new jframe1());
    }
    public void inAlreadyPatient(){
        sheet.setSelectedIndex(4);
        //System.exit(2);
    }
    
    public String getDateff(){
        Date now = new Date();
            SimpleDateFormat formatter = new SimpleDateFormat( "yyyy/MM/dd" );
            String date = formatter.format( now );
            System.out.println ( "The current date is: " + date); 
            return date;
    }
    
    public String fetchPatientDetail(String patientNo){
        
        Connection conn = null;
        Statement stmt = null;
        ResultSet rs = null;
        String pNm = "" ;
        try {
             conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/dbname","root","");
             stmt = conn.createStatement();
             rs = stmt.executeQuery("select NAME from avi3_profile where PID = '"+patientNo+"'");
             rs.next();
             pNm = rs.getString(1);
             System.out.println("Patient Name = "+pNm);
        } catch (Exception e) {
        }
       return  pNm;
    }
    
    
    public String quotate(String content){
        return "'"+content+"'";
    }
    
    
    
     

    
    public void delFile(String path){
        File f = new File(path);
        if (f.exists()) {
            f.delete();
        }
    }
    
    public void comboSelector(){
    int d = reportType.getSelectedIndex();
     switch(d){
        
         case 0:

             break;
             
         case 1:
             patientID.setEditable(true);
             pReportType = "Blood Report";
             break;
         case 2:
              patientID.setEditable(true);
              pReportType = "X-Ray Report";
             break;
             
         case 3:
             patientID.setEditable(true);
             pReportType = "UltraSound Report";
            break;
         
        }
}
    static{
        try {
            Class.forName("com.mysql.jdbc.Driver");
        } catch (final ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
    public static void main(String args[]) throws SQLException, ClassNotFoundException
    {
        ResultSet rs;
            
            
            
    
   
            
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jframe1().getContentPane();
                new jframe1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JTextField age;
    private javax.swing.JButton browse;
    private javax.swing.JTextField dob;
    private javax.swing.JTextField familyMemberName;
    private javax.swing.JTextField height;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel nPatient;
    private javax.swing.JTextField name;
    private javax.swing.JTextField namf;
    private javax.swing.JTable p3;
    private javax.swing.JLabel pAd;
    private javax.swing.JLabel pAg;
    private javax.swing.JLabel pBirth;
    private javax.swing.JLabel pHigh;
    private javax.swing.JLabel pMember;
    private javax.swing.JLabel pNam;
    private javax.swing.JLabel pPhNo;
    private javax.swing.JLabel pWght;
    private java.awt.Panel panel1;
    private javax.swing.JTextField patientID;
    private javax.swing.JTextField patientId;
    private javax.swing.JTextField phoneNo;
    private javax.swing.JTextField pid;
    private javax.swing.JLabel pidNumber;
    private javax.swing.JTextField pidPresc;
    private javax.swing.JTextField pidf;
    private javax.swing.JTable prescriptionTable;
    private javax.swing.JTextArea prscriptionText;
    private javax.swing.JTextField reportPath;
    private javax.swing.JComboBox reportType;
    private javax.swing.JButton savePresc;
    private javax.swing.JButton saveReport;
    private javax.swing.JButton search1;
    private javax.swing.JButton searchPrec;
    private javax.swing.JButton searchReport;
    private javax.swing.JTabbedPane sheet;
    private javax.swing.JButton submit;
    private javax.swing.JTextField weight;
    // End of variables declaration//GEN-END:variables
}
